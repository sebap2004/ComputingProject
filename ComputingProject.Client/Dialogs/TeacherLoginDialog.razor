@using ComputingProject.Client.Providers
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<MudDialog OnBackdropClick="_ => { }">
    <TitleContent>
        <MudText Typo="Typo.h5">TEACHER LOGIN</MudText>
        <MudText>Enter Details Provided To you</MudText>
    </TitleContent>
    <DialogContent >
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <MudCard Elevation="0" Style="width: 30rem" >
                <MudCardContent Class="pt-0">
                    <MudTextField Required="true" RequiredError="Answer is required." Error="Error" ErrorText="Incorrect Password." Label="Password" HelperText="Ask the project leader if you've forgotten" Class="mt-3"
                                  @bind-Value="loginModel.Password" For="@(() => loginModel.Password)" InputType="InputType.Password"/>
                </MudCardContent>
                <MudCardActions>
                    <MudSpacer />
                    <MudButton OnClick="Cancel">Cancel</MudButton>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Ok</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    private LoginModel loginModel = new();
    
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    
    private bool Error { get; set; }
    
    private void Cancel() => MudDialog.Cancel();
    
    private async Task HandleLogin()
    {
        loginModel.IsTeacher = true;
        loginModel.Username = "Teacher";
        var response = await HttpClient.PostAsJsonAsync("api/auth/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            if (AuthStateProvider is CookieAuthenticationStateProvider customProvider)
            {
                customProvider.NotifyAuthenticationStateChanged();
                Navigation.NavigateTo("/teacher");
                Error = false;
            }
        }
        else
        {
            Error = true;
        }
    }
}
