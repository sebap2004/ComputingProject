@using ComputingProject.Client.Themes
<MudItem xs="12">
    <MudPaper Style="@($"background:{theme.PaletteLight.Warning};")" 
        Class="p-2 d-flex flex-row align-center">
        <MudText Color="Color.Dark">Student @Student needs help</MudText>
        <MudSpacer></MudSpacer>
        <MudButton Disabled="QuestionIsAcknowledged"
                   OnClick="() => SendAcknowledgement(Student)" Color="Color.Secondary"
                   Variant="Variant.Filled">
            @if (QuestionIsAcknowledged)
            {
                <MudText Typo="Typo.button">Acknowledged</MudText>
            }
            else
            {
                <MudText Typo="Typo.button">Acknowledge</MudText>
            }
        </MudButton>
        <MudButton OnClick="() => SendResolve(Student)" Class="ml-2" Color="Color.Primary"
                   Variant="Variant.Filled">
            <MudText Color="Color.Surface" Typo="Typo.button">Mark as
                resolved</MudText>
        </MudButton>
    </MudPaper>
</MudItem>

@code {
    MudTheme theme = new DefaultTheme();
    
    [Parameter] public string Student { get; set; }
    [Parameter] public bool QuestionIsAcknowledged { get; set; }
    [Parameter] public Action<string> OnAcknowledged { get; set; }
    [Parameter] public Action<string> OnResolved { get; set; }

    public void SendAcknowledgement(string id)
    {
        OnAcknowledged(id);
    }
    
    public void SendResolve(string id)
    {
        OnResolved(id);
    }
}