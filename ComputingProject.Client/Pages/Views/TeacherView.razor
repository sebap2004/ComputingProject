@page "/teacher"
@using ComputingProject.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@using ComputingProject.Client.Components
@using ComputingProject.Client.Dialogs
@using MudExtensions
@rendermode InteractiveWebAssembly
@inject ISnackbar Snackbar
@inject IClassroomService ClassroomService
@inject IClassroomServer ClassroomServer
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Teacher View</PageTitle>

@if (IsConnected)
{
    <MudText Align="Align.Center" Typo="Typo.h3"><b>Teacher View</b></MudText>
    <br/>
    <MudGrid>
        <TeacherGridItem>
            <MudText Typo="Typo.h4"><b>Manage Classroom</b></MudText>
            <MudText GutterBottom="true" Typo="Typo.h6">Switch States</MudText>
            <MudPaper Class="mb-3" Elevation="0">
                <MudGrid Spacing="2">
                    <MudItem>
                        <MudButton Variant="Variant.Filled" Color="LectureButtonColor" OnClick="SetLectureState">
                            Lecture
                            @if (CurrentClassroomState == ClassroomState.Lecture)
                            {
                                <MudIcon Class="ml-2" Icon="@Icons.Material.Filled.Check"></MudIcon>
                            }
                        </MudButton>
                    </MudItem>
                    <MudItem>
                        <MudButton Variant="Variant.Filled" Color="WorkshopButtonColor" OnClick="SetWorkshopState">
                            Workshop
                            @if (CurrentClassroomState == ClassroomState.Workshop)
                            {
                                <MudIcon Class="ml-2" Icon="@Icons.Material.Filled.Check"></MudIcon>
                            }
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudPaper>
            <MudText Class="mt-3">Student List (@StudentCount joined):</MudText>
            <MudPaper Style="@($"background:{Theme.PaletteLight.DarkLighten};")" Height="20rem" MaxHeight="20rem"
                      Class="is-overflow-y-auto mb-2" Elevation="0">
                <MudPaper Class="p-4" Elevation="0" Style="@($"background:{Color.Transparent};")">
                    <MudGrid Spacing="1">
                        @foreach (string student in ConnectedStudents)
                        {
                            <MudItem xs="12" sm="4">
                                <MudPaper Class="p-2">
                                    <MudText>Student @student</MudText>
                                </MudPaper>
                            </MudItem>
                        }
                    </MudGrid>
                </MudPaper>
            </MudPaper>
            <MudButton Variant="Variant.Filled" FullWidth="false" Color="Color.Tertiary"
                       OnClick="ClassroomServer.GetStudents">Refresh Student
                List
            </MudButton>
        </TeacherGridItem>
        <TeacherGridItem>
            <MudText GutterBottom="true" Typo="Typo.h4"><b>Send Question</b></MudText>
            <MudPaper Elevation="0" Class="d-flex flex-row mb-3">
                <MudTextField Immediate="true" OnKeyDown="QuestionEnterHandler" T="string" @bind-Value="QuestionInput"
                              Placeholder="Ask your students a question" Label="Question" Variant="Variant.Filled"
                              Typo="Typo.h5"></MudTextField>
                <MudButton OnClick="SendTeacherQuestion" Variant="Variant.Filled" Color="Color.Primary" Class="ml-3">
                    Send
                </MudButton>
            </MudPaper>
            <MudText GutterBottom="true" Typo="Typo.h5"><b>Manage Questions</b></MudText>
            <MudPaper Style="@($"background:{Theme.PaletteLight.DarkLighten};")" Height="20rem" MaxHeight="20rem"
                      Class="is-overflow-y-auto mb-2" Elevation="0">
                <MudPaper Class="p-4" Elevation="0" Style="@($"background:{Color.Transparent};")">
                    <MudGrid Spacing="1">
                        @foreach (var question in ActiveQuestions)
                        {
                            <TeacherViewQuestion OnDelete="_ => DeleteQuestion(question.Id)"
                                                 OnArchive="_ => ArchiveQuestion(question.Id)"
                                                 OnShow="_ => ShowQuestion(question.Id)"
                                                 question="question"
                                                 SelectQuestionID="@SelectQuestionID"
                                                 ArchiveColor="ArchiveColor(question.Archived)"
                                                 ViewingColor="ViewingColor(SelectQuestionID == question.Id)"></TeacherViewQuestion>
                        }
                    </MudGrid>
                </MudPaper>
            </MudPaper>
            <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Tertiary"
                       OnClick="ClassroomServer.GetStudents">Refresh Active Questions
            </MudButton>
        </TeacherGridItem>
        <TeacherGridItem>
            <MudText GutterBottom="true" Typo="Typo.h4"><b>Manage Help Requests</b></MudText>
            <MudText GutterBottom="true" Typo="Typo.h6">Current Active Help Requests</MudText>
            <MudPaper Style="@($"background:{Theme.PaletteLight.DarkLighten};")" Height="35rem" MaxHeight="35rem"
                      Class="is-overflow-y-auto mb-2" Elevation="0">
                <MudPaper Class="p-4" Elevation="0" Style="@($"background:{Color.Transparent};")">
                    <MudGrid Spacing="1">
                        @foreach (string student in ActiveHelpRequests)
                        {
                            <TeacherHelpRequest Student="@student"
                                                QuestionIsAcknowledged="QuestionIsAcknowledged(student)"
                                                OnAcknowledged="(s) => SendAcknowledgement(s)"
                                                OnResolved="(s) => SendResolve(s)"></TeacherHelpRequest>
                        }
                    </MudGrid>
                </MudPaper>
            </MudPaper>
        </TeacherGridItem>
        <TeacherGridItemNoPad>
            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudTabPanel Text="Manage Current Task">
                    <MudPaper Elevation="0" Class="d-flex flex-row mb-4">
                        <MudTextField Immediate="true" OnKeyDown="TaskEnterHandler" T="string" @bind-Value="TaskInput"
                                      Placeholder="Set a task for your students to do" Label="Task"
                                      Variant="Variant.Filled"
                                      Typo="Typo.h5"></MudTextField>
                        <MudButton OnClick="SetCurrentTask" Variant="Variant.Filled" Color="Color.Primary" Class="ml-3">
                            Send
                        </MudButton>
                        <MudButton OnClick="ResetTask" Variant="Variant.Filled" Color="Color.Error" Class="ml-3">
                            Reset Task
                        </MudButton>
                    </MudPaper>
                    <MudText GutterBottom="true" Typo="Typo.h4"><b>Student View</b></MudText>
                    @if (string.IsNullOrWhiteSpace(CurrentTask))
                    {
                        <MudText Typo="Typo.h5">No Task Set.</MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.h5">Current Task: @CurrentTask</MudText>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Manage Announcements">
                    <MudPaper Elevation="0" Class="d-flex flex-row mb-3">
                        <MudTextField Immediate="true" OnKeyDown="AnnouncementEnterHandler" T="string"
                                      @bind-Value="AnnouncementInput"
                                      Placeholder="Send an announcement to your students" Label="Announcement"
                                      Variant="Variant.Filled"
                                      Typo="Typo.h5"></MudTextField>
                        <MudButton OnClick="SendNewAnnouncement" Variant="Variant.Filled" Color="Color.Primary"
                                   Class="ml-3">
                            Send
                        </MudButton>
                    </MudPaper>
                    <MudPaper Style="@($"background:{Theme.PaletteLight.DarkLighten};")" Height="25rem"
                              MaxHeight="25rem"
                              Class="is-overflow-y-auto mb-2" Elevation="0">
                        <MudPaper Class="p-4" Elevation="0" Style="@($"background:{Color.Transparent};")">
                            <MudGrid Spacing="1">
                                @foreach (var announcement in Announcements)
                                {
                                    <TeacherViewAnnouncement OnDelete="_ => RemoveAnnouncement(announcement.Id)"
                                                             OnArchive="_ => ToggleHideAnnouncement(announcement.Id)"
                                                             Announcement="announcement"
                                                             ArchiveColor="ArchiveColor(announcement.Archived)"></TeacherViewAnnouncement>
                                }
                            </MudGrid>
                        </MudPaper>
                    </MudPaper>
                </MudTabPanel>
            </MudTabs>
        </TeacherGridItemNoPad>
    </MudGrid>


    <MudDialog Style="width: 70vw; height: calc(100dvh - var(--mud-appbar-height)); max-width: 70vw" @ref="_dialog"
               OnBackdropClick="CloseViewAnswers" Options="_dialogOptions">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudPaper Class="d-flex is-align-items-flex-start mb-4 flex-row" Elevation="0">
                    <MudText GutterBottom="true" Typo="Typo.h3"><b>Question View</b></MudText>
                    <MudSpacer></MudSpacer>
                    <MudButton Size="Size.Medium" Variant="Variant.Filled" Color="Color.Primary"
                               OnClick="CloseViewAnswers" Class="px-10">Close
                    </MudButton>
                </MudPaper>
                <MudText GutterBottom="true" Typo="Typo.h4"><b>@SelectedQuestionObject.QuestionText</b></MudText>
                <MudText GutterBottom="true" Typo="Typo.h5"><b>Answers:</b></MudText>
            </MudText>
        </TitleContent>
        <DialogContent>
            @if (SelectedQuestionObject != null)
            {
                <MudPaper Class="is-overflow-y-auto" Elevation="0">

                    @foreach (var answer in SelectedQuestionObject.Answers)
                    {
                        <MudChat ChatPosition="ChatBubblePosition.Start" Class="mb-3">
                            <MudChatBubble>
                                @answer
                            </MudChatBubble>
                        </MudChat>
                    }

                </MudPaper>
            }
            else
            {
                <MudText>No question selected.</MudText>
            }
        </DialogContent>
    </MudDialog>
}
else
{
    <MudPaper Class="is-display-flex is-justify-content-center is-flex-direction-row is-align-items-center"
              Height="90vh">
        <MudLoading Darken="true" Loading="true" Text="Connecting...">

        </MudLoading>
    </MudPaper>
}


